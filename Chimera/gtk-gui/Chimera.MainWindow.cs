
// This file has been generated by the GUI designer. Do not modify.
namespace Chimera
{
	public partial class MainWindow
	{
		private global::Gtk.UIManager UIManager;
		private global::Gtk.Action mnFile;
		private global::Gtk.Action ModusAction;
		private global::Gtk.Action EditAction;
		private global::Gtk.Action mnFileNew;
		private global::Gtk.Action mnFileOpen;
		private global::Gtk.Action mnFileSave;
		private global::Gtk.Action mnFilePlot;
		private global::Gtk.Action mnFileQuit;
		private global::Gtk.RadioAction mnModePresentation;
		private global::Gtk.RadioAction mnModeModification;
		private global::Gtk.RadioAction mnModeInvestigation;
		private global::Gtk.Action AWPAction;
		private global::Gtk.Action mnAwpRandom;
		private global::Gtk.Action mnAwpTwoSteps;
		private global::Gtk.Action mnAwpCurrent;
		private global::Gtk.Action mnExtras;
		private global::Gtk.ToggleAction mnExtrasPlayPause;
		private global::Gtk.Action mnExtrasClear;
		private global::Gtk.Action mnHelp;
		private global::Gtk.Action mnHelpHelp;
		private global::Gtk.Action mnHelpAbout;
		private global::Gtk.Action mnExtrasOption;
		private global::Gtk.RadioAction ZeitpunktAction;
		private global::Gtk.RadioAction HistorieAction;
		private global::Gtk.RadioAction SchwerpunktAction;
		private global::Gtk.VBox layoutBox;
		private global::Gtk.MenuBar menubarTop;
		private global::Gtk.HBox contentColumns;
		private global::Gtk.VBox rightLayout;
		private global::Gtk.HBox boxPhase;
		private global::Gtk.Label lblVertical;
		private global::Gtk.Label lblHorizontal;
		private global::Gtk.Table PropertiesLayout;
		private global::Gtk.Button btnPlayPause;
		private global::Gtk.DrawingArea drawPlayPause;
		private global::Gtk.HBox hboxN;
		private global::Gtk.SpinButton numN;
		private global::Gtk.HBox hboxP;
		private global::Gtk.SpinButton numP;
		private global::Gtk.Label lblBeta;
		private global::Gtk.Label lblK;
		private global::Gtk.Label lblLambda;
		private global::Gtk.Label lblN;
		private global::Gtk.Label lblOmega;
		private global::Gtk.Label lblP;
		private global::Gtk.HScale slideBeta;
		private global::Gtk.HScale slideK;
		private global::Gtk.HScale slideLambda;
		private global::Gtk.HScale slideOmega;
		private global::Gtk.HScale slideTime;
		private global::Gtk.Statusbar statusMain;
		private global::Gtk.Label lblStatus;
		private global::Gtk.ProgressBar progressStatus;

		protected virtual void Build ()
		{
			global::Stetic.Gui.Initialize (this);
			// Widget Chimera.MainWindow
			this.UIManager = new global::Gtk.UIManager ();
			global::Gtk.ActionGroup w1 = new global::Gtk.ActionGroup ("Default");
			this.mnFile = new global::Gtk.Action ("mnFile", global::Mono.Unix.Catalog.GetString ("_Datei"), null, null);
			this.mnFile.ShortLabel = global::Mono.Unix.Catalog.GetString ("Datei");
			w1.Add (this.mnFile, null);
			this.ModusAction = new global::Gtk.Action ("ModusAction", global::Mono.Unix.Catalog.GetString ("_Modus"), null, null);
			this.ModusAction.ShortLabel = global::Mono.Unix.Catalog.GetString ("Modus");
			w1.Add (this.ModusAction, null);
			this.EditAction = new global::Gtk.Action ("EditAction", global::Mono.Unix.Catalog.GetString ("Edit"), null, null);
			this.EditAction.ShortLabel = global::Mono.Unix.Catalog.GetString ("Edit");
			w1.Add (this.EditAction, null);
			this.mnFileNew = new global::Gtk.Action ("mnFileNew", global::Mono.Unix.Catalog.GetString ("_Neu"), null, "gtk-new");
			this.mnFileNew.ShortLabel = global::Mono.Unix.Catalog.GetString ("Neu");
			w1.Add (this.mnFileNew, null);
			this.mnFileOpen = new global::Gtk.Action ("mnFileOpen", global::Mono.Unix.Catalog.GetString ("Ö_ffnen"), null, null);
			this.mnFileOpen.ShortLabel = global::Mono.Unix.Catalog.GetString ("Öffnen");
			w1.Add (this.mnFileOpen, "<Primary>o");
			this.mnFileSave = new global::Gtk.Action ("mnFileSave", global::Mono.Unix.Catalog.GetString ("_Speichern"), null, "gtk-save");
			this.mnFileSave.ShortLabel = global::Mono.Unix.Catalog.GetString ("Speichern");
			w1.Add (this.mnFileSave, null);
			this.mnFilePlot = new global::Gtk.Action ("mnFilePlot", global::Mono.Unix.Catalog.GetString ("_Plot"), null, "gtk-print");
			this.mnFilePlot.ShortLabel = global::Mono.Unix.Catalog.GetString ("Plot");
			w1.Add (this.mnFilePlot, "<Primary>p");
			this.mnFileQuit = new global::Gtk.Action ("mnFileQuit", global::Mono.Unix.Catalog.GetString ("_Beenden"), null, null);
			this.mnFileQuit.ShortLabel = global::Mono.Unix.Catalog.GetString ("Beenden");
			w1.Add (this.mnFileQuit, "<Primary>q");
			this.mnModePresentation = new global::Gtk.RadioAction ("mnModePresentation", global::Mono.Unix.Catalog.GetString ("_Darstellung"), null, null, 0);
			this.mnModePresentation.Group = new global::GLib.SList (global::System.IntPtr.Zero);
			this.mnModePresentation.ShortLabel = global::Mono.Unix.Catalog.GetString ("Presentation");
			w1.Add (this.mnModePresentation, "<Primary>1");
			this.mnModeModification = new global::Gtk.RadioAction ("mnModeModification", global::Mono.Unix.Catalog.GetString ("_Bearbeiten"), null, null, 1);
			this.mnModeModification.Group = this.mnModePresentation.Group;
			this.mnModeModification.ShortLabel = global::Mono.Unix.Catalog.GetString ("Modification");
			w1.Add (this.mnModeModification, "<Primary>2");
			this.mnModeInvestigation = new global::Gtk.RadioAction ("mnModeInvestigation", global::Mono.Unix.Catalog.GetString ("_Untersuchung"), null, null, 2);
			this.mnModeInvestigation.Group = this.mnModeModification.Group;
			this.mnModeInvestigation.Sensitive = false;
			this.mnModeInvestigation.ShortLabel = global::Mono.Unix.Catalog.GetString ("Investigation");
			w1.Add (this.mnModeInvestigation, "<Primary>3");
			this.AWPAction = new global::Gtk.Action ("AWPAction", global::Mono.Unix.Catalog.GetString ("_AWP"), null, null);
			this.AWPAction.ShortLabel = global::Mono.Unix.Catalog.GetString ("AWP");
			w1.Add (this.AWPAction, null);
			this.mnAwpRandom = new global::Gtk.Action ("mnAwpRandom", global::Mono.Unix.Catalog.GetString ("_Zufall"), null, null);
			this.mnAwpRandom.ShortLabel = global::Mono.Unix.Catalog.GetString ("Zufall");
			w1.Add (this.mnAwpRandom, null);
			this.mnAwpTwoSteps = new global::Gtk.Action ("mnAwpTwoSteps", global::Mono.Unix.Catalog.GetString ("Zwei _Stufen"), null, null);
			this.mnAwpTwoSteps.ShortLabel = global::Mono.Unix.Catalog.GetString ("2 Stufen");
			w1.Add (this.mnAwpTwoSteps, null);
			this.mnAwpCurrent = new global::Gtk.Action ("mnAwpCurrent", global::Mono.Unix.Catalog.GetString ("_Aktuell"), null, null);
			this.mnAwpCurrent.ShortLabel = global::Mono.Unix.Catalog.GetString ("Aktuell");
			w1.Add (this.mnAwpCurrent, null);
			this.mnExtras = new global::Gtk.Action ("mnExtras", global::Mono.Unix.Catalog.GetString ("_Extras"), null, null);
			this.mnExtras.ShortLabel = global::Mono.Unix.Catalog.GetString ("Aktion");
			w1.Add (this.mnExtras, null);
			this.mnExtrasPlayPause = new global::Gtk.ToggleAction ("mnExtrasPlayPause", global::Mono.Unix.Catalog.GetString ("_Abspielen"), null, null);
			this.mnExtrasPlayPause.ShortLabel = global::Mono.Unix.Catalog.GetString ("Abspielen");
			w1.Add (this.mnExtrasPlayPause, "F5");
			this.mnExtrasClear = new global::Gtk.Action ("mnExtrasClear", global::Mono.Unix.Catalog.GetString ("Phasenportait _löschen"), null, null);
			this.mnExtrasClear.ShortLabel = global::Mono.Unix.Catalog.GetString ("Phasenportait löschen");
			w1.Add (this.mnExtrasClear, "F9");
			this.mnHelp = new global::Gtk.Action ("mnHelp", global::Mono.Unix.Catalog.GetString ("_Hilfe"), null, null);
			this.mnHelp.ShortLabel = global::Mono.Unix.Catalog.GetString ("Hilfe");
			w1.Add (this.mnHelp, null);
			this.mnHelpHelp = new global::Gtk.Action ("mnHelpHelp", global::Mono.Unix.Catalog.GetString ("_Hilfe"), null, null);
			this.mnHelpHelp.ShortLabel = global::Mono.Unix.Catalog.GetString ("Hilfe");
			w1.Add (this.mnHelpHelp, "F1");
			this.mnHelpAbout = new global::Gtk.Action ("mnHelpAbout", global::Mono.Unix.Catalog.GetString ("Ü_ber..."), null, null);
			this.mnHelpAbout.ShortLabel = global::Mono.Unix.Catalog.GetString ("Über...");
			w1.Add (this.mnHelpAbout, null);
			this.mnExtrasOption = new global::Gtk.Action ("mnExtrasOption", global::Mono.Unix.Catalog.GetString ("_Optionen"), null, "gtk-preferences");
			this.mnExtrasOption.ShortLabel = global::Mono.Unix.Catalog.GetString ("_Optionen");
			w1.Add (this.mnExtrasOption, null);
			this.ZeitpunktAction = new global::Gtk.RadioAction ("ZeitpunktAction", global::Mono.Unix.Catalog.GetString ("Zeitpunkt"), null, null, 0);
			this.ZeitpunktAction.Group = new global::GLib.SList (global::System.IntPtr.Zero);
			this.ZeitpunktAction.ShortLabel = global::Mono.Unix.Catalog.GetString ("Zeitpunkt");
			w1.Add (this.ZeitpunktAction, null);
			this.HistorieAction = new global::Gtk.RadioAction ("HistorieAction", global::Mono.Unix.Catalog.GetString ("Historie"), null, null, 1);
			this.HistorieAction.Group = this.ZeitpunktAction.Group;
			this.HistorieAction.ShortLabel = global::Mono.Unix.Catalog.GetString ("Historie");
			w1.Add (this.HistorieAction, null);
			this.SchwerpunktAction = new global::Gtk.RadioAction ("SchwerpunktAction", global::Mono.Unix.Catalog.GetString ("Schwerpunkt"), null, null, 2);
			this.SchwerpunktAction.Group = this.HistorieAction.Group;
			this.SchwerpunktAction.Sensitive = false;
			this.SchwerpunktAction.ShortLabel = global::Mono.Unix.Catalog.GetString ("Schwerpunkt");
			w1.Add (this.SchwerpunktAction, null);
			this.UIManager.InsertActionGroup (w1, 0);
			this.AddAccelGroup (this.UIManager.AccelGroup);
			this.Name = "Chimera.MainWindow";
			this.Title = global::Mono.Unix.Catalog.GetString ("Chimera");
			this.Icon = global::Gdk.Pixbuf.LoadFromResource ("Chimera.cc.png");
			this.WindowPosition = ((global::Gtk.WindowPosition)(4));
			// Container child Chimera.MainWindow.Gtk.Container+ContainerChild
			this.layoutBox = new global::Gtk.VBox ();
			this.layoutBox.Name = "layoutBox";
			this.layoutBox.Spacing = 6;
			// Container child layoutBox.Gtk.Box+BoxChild
			this.UIManager.AddUiFromString ("<ui><menubar name='menubarTop'><menu name='mnFile' action='mnFile'><menuitem name='mnFileNew' action='mnFileNew'/><menuitem name='mnFileOpen' action='mnFileOpen'/><menuitem name='mnFileSave' action='mnFileSave'/><menuitem name='mnFilePlot' action='mnFilePlot'/><menuitem name='mnFileQuit' action='mnFileQuit'/></menu><menu name='ModusAction' action='ModusAction'><menuitem name='mnModePresentation' action='mnModePresentation'/><menuitem name='mnModeModification' action='mnModeModification'/><menuitem name='mnModeInvestigation' action='mnModeInvestigation'/></menu><menu name='AWPAction' action='AWPAction'><menuitem name='mnAwpRandom' action='mnAwpRandom'/><menuitem name='mnAwpTwoSteps' action='mnAwpTwoSteps'/><menuitem name='mnAwpCurrent' action='mnAwpCurrent'/></menu><menu name='mnExtras' action='mnExtras'><menuitem name='mnExtrasPlayPause' action='mnExtrasPlayPause'/><menuitem name='mnExtrasClear' action='mnExtrasClear'/><menuitem name='mnExtrasOption' action='mnExtrasOption'/></menu><menu name='mnHelp' action='mnHelp'><menuitem name='mnHelpHelp' action='mnHelpHelp'/><menuitem name='mnHelpAbout' action='mnHelpAbout'/></menu></menubar></ui>");
			this.menubarTop = ((global::Gtk.MenuBar)(this.UIManager.GetWidget ("/menubarTop")));
			this.menubarTop.Name = "menubarTop";
			this.layoutBox.Add (this.menubarTop);
			global::Gtk.Box.BoxChild w2 = ((global::Gtk.Box.BoxChild)(this.layoutBox [this.menubarTop]));
			w2.Position = 0;
			w2.Expand = false;
			w2.Fill = false;
			// Container child layoutBox.Gtk.Box+BoxChild
			this.contentColumns = new global::Gtk.HBox ();
			this.contentColumns.Name = "contentColumns";
			this.contentColumns.Spacing = 6;
			// Container child contentColumns.Gtk.Box+BoxChild
			this.rightLayout = new global::Gtk.VBox ();
			this.rightLayout.Name = "rightLayout";
			this.rightLayout.Spacing = 6;
			// Container child rightLayout.Gtk.Box+BoxChild
			this.boxPhase = new global::Gtk.HBox ();
			this.boxPhase.Name = "boxPhase";
			this.boxPhase.Spacing = 6;
			// Container child boxPhase.Gtk.Box+BoxChild
			this.lblVertical = new global::Gtk.Label ();
			this.lblVertical.Name = "lblVertical";
			this.boxPhase.Add (this.lblVertical);
			global::Gtk.Box.BoxChild w3 = ((global::Gtk.Box.BoxChild)(this.boxPhase [this.lblVertical]));
			w3.Position = 1;
			w3.Expand = false;
			w3.Fill = false;
			this.rightLayout.Add (this.boxPhase);
			global::Gtk.Box.BoxChild w4 = ((global::Gtk.Box.BoxChild)(this.rightLayout [this.boxPhase]));
			w4.Position = 0;
			w4.Expand = false;
			w4.Fill = false;
			// Container child rightLayout.Gtk.Box+BoxChild
			this.lblHorizontal = new global::Gtk.Label ();
			this.lblHorizontal.Name = "lblHorizontal";
			this.rightLayout.Add (this.lblHorizontal);
			global::Gtk.Box.BoxChild w5 = ((global::Gtk.Box.BoxChild)(this.rightLayout [this.lblHorizontal]));
			w5.Position = 2;
			w5.Expand = false;
			w5.Fill = false;
			// Container child rightLayout.Gtk.Box+BoxChild
			this.PropertiesLayout = new global::Gtk.Table (((uint)(7)), ((uint)(2)), false);
			this.PropertiesLayout.Name = "PropertiesLayout";
			this.PropertiesLayout.RowSpacing = ((uint)(4));
			// Container child PropertiesLayout.Gtk.Table+TableChild
			this.btnPlayPause = new global::Gtk.Button ();
			this.btnPlayPause.CanFocus = true;
			this.btnPlayPause.Name = "btnPlayPause";
			// Container child btnPlayPause.Gtk.Container+ContainerChild
			this.drawPlayPause = new global::Gtk.DrawingArea ();
			this.drawPlayPause.WidthRequest = 16;
			this.drawPlayPause.HeightRequest = 16;
			this.drawPlayPause.Name = "drawPlayPause";
			this.btnPlayPause.Add (this.drawPlayPause);
			this.btnPlayPause.Label = null;
			this.PropertiesLayout.Add (this.btnPlayPause);
			global::Gtk.Table.TableChild w7 = ((global::Gtk.Table.TableChild)(this.PropertiesLayout [this.btnPlayPause]));
			w7.TopAttach = ((uint)(6));
			w7.BottomAttach = ((uint)(7));
			w7.XOptions = ((global::Gtk.AttachOptions)(4));
			w7.YOptions = ((global::Gtk.AttachOptions)(4));
			// Container child PropertiesLayout.Gtk.Table+TableChild
			this.hboxN = new global::Gtk.HBox ();
			this.hboxN.Name = "hboxN";
			this.hboxN.Spacing = 6;
			// Container child hboxN.Gtk.Box+BoxChild
			this.numN = new global::Gtk.SpinButton (0, 1000, 1);
			this.numN.CanFocus = true;
			this.numN.Name = "numN";
			this.numN.Adjustment.PageIncrement = 10;
			this.numN.ClimbRate = 1;
			this.numN.Numeric = true;
			this.numN.UpdatePolicy = ((global::Gtk.SpinButtonUpdatePolicy)(1));
			this.hboxN.Add (this.numN);
			global::Gtk.Box.BoxChild w8 = ((global::Gtk.Box.BoxChild)(this.hboxN [this.numN]));
			w8.Position = 0;
			w8.Expand = false;
			w8.Fill = false;
			this.PropertiesLayout.Add (this.hboxN);
			global::Gtk.Table.TableChild w9 = ((global::Gtk.Table.TableChild)(this.PropertiesLayout [this.hboxN]));
			w9.LeftAttach = ((uint)(1));
			w9.RightAttach = ((uint)(2));
			w9.YOptions = ((global::Gtk.AttachOptions)(4));
			// Container child PropertiesLayout.Gtk.Table+TableChild
			this.hboxP = new global::Gtk.HBox ();
			this.hboxP.Name = "hboxP";
			this.hboxP.Spacing = 6;
			// Container child hboxP.Gtk.Box+BoxChild
			this.numP = new global::Gtk.SpinButton (0, 1000, 1);
			this.numP.CanFocus = true;
			this.numP.Name = "numP";
			this.numP.Adjustment.PageIncrement = 10;
			this.numP.ClimbRate = 1;
			this.numP.Numeric = true;
			this.numP.UpdatePolicy = ((global::Gtk.SpinButtonUpdatePolicy)(1));
			this.hboxP.Add (this.numP);
			global::Gtk.Box.BoxChild w10 = ((global::Gtk.Box.BoxChild)(this.hboxP [this.numP]));
			w10.Position = 0;
			w10.Expand = false;
			w10.Fill = false;
			this.PropertiesLayout.Add (this.hboxP);
			global::Gtk.Table.TableChild w11 = ((global::Gtk.Table.TableChild)(this.PropertiesLayout [this.hboxP]));
			w11.TopAttach = ((uint)(1));
			w11.BottomAttach = ((uint)(2));
			w11.LeftAttach = ((uint)(1));
			w11.RightAttach = ((uint)(2));
			w11.YOptions = ((global::Gtk.AttachOptions)(4));
			// Container child PropertiesLayout.Gtk.Table+TableChild
			this.lblBeta = new global::Gtk.Label ();
			this.lblBeta.Name = "lblBeta";
			this.lblBeta.LabelProp = global::Mono.Unix.Catalog.GetString ("β:");
			this.lblBeta.Justify = ((global::Gtk.Justification)(1));
			this.PropertiesLayout.Add (this.lblBeta);
			global::Gtk.Table.TableChild w12 = ((global::Gtk.Table.TableChild)(this.PropertiesLayout [this.lblBeta]));
			w12.TopAttach = ((uint)(5));
			w12.BottomAttach = ((uint)(6));
			w12.XOptions = ((global::Gtk.AttachOptions)(4));
			w12.YOptions = ((global::Gtk.AttachOptions)(4));
			// Container child PropertiesLayout.Gtk.Table+TableChild
			this.lblK = new global::Gtk.Label ();
			this.lblK.Name = "lblK";
			this.lblK.LabelProp = global::Mono.Unix.Catalog.GetString ("K:");
			this.lblK.Justify = ((global::Gtk.Justification)(1));
			this.PropertiesLayout.Add (this.lblK);
			global::Gtk.Table.TableChild w13 = ((global::Gtk.Table.TableChild)(this.PropertiesLayout [this.lblK]));
			w13.TopAttach = ((uint)(4));
			w13.BottomAttach = ((uint)(5));
			w13.XOptions = ((global::Gtk.AttachOptions)(4));
			w13.YOptions = ((global::Gtk.AttachOptions)(4));
			// Container child PropertiesLayout.Gtk.Table+TableChild
			this.lblLambda = new global::Gtk.Label ();
			this.lblLambda.Name = "lblLambda";
			this.lblLambda.LabelProp = global::Mono.Unix.Catalog.GetString ("λ:");
			this.lblLambda.Justify = ((global::Gtk.Justification)(1));
			this.PropertiesLayout.Add (this.lblLambda);
			global::Gtk.Table.TableChild w14 = ((global::Gtk.Table.TableChild)(this.PropertiesLayout [this.lblLambda]));
			w14.TopAttach = ((uint)(2));
			w14.BottomAttach = ((uint)(3));
			w14.XOptions = ((global::Gtk.AttachOptions)(4));
			w14.YOptions = ((global::Gtk.AttachOptions)(4));
			// Container child PropertiesLayout.Gtk.Table+TableChild
			this.lblN = new global::Gtk.Label ();
			this.lblN.Name = "lblN";
			this.lblN.LabelProp = global::Mono.Unix.Catalog.GetString ("N:");
			this.lblN.Justify = ((global::Gtk.Justification)(1));
			this.PropertiesLayout.Add (this.lblN);
			global::Gtk.Table.TableChild w15 = ((global::Gtk.Table.TableChild)(this.PropertiesLayout [this.lblN]));
			w15.XOptions = ((global::Gtk.AttachOptions)(4));
			w15.YOptions = ((global::Gtk.AttachOptions)(4));
			// Container child PropertiesLayout.Gtk.Table+TableChild
			this.lblOmega = new global::Gtk.Label ();
			this.lblOmega.Name = "lblOmega";
			this.lblOmega.LabelProp = global::Mono.Unix.Catalog.GetString ("ω:");
			this.lblOmega.Justify = ((global::Gtk.Justification)(1));
			this.PropertiesLayout.Add (this.lblOmega);
			global::Gtk.Table.TableChild w16 = ((global::Gtk.Table.TableChild)(this.PropertiesLayout [this.lblOmega]));
			w16.TopAttach = ((uint)(3));
			w16.BottomAttach = ((uint)(4));
			w16.XOptions = ((global::Gtk.AttachOptions)(4));
			w16.YOptions = ((global::Gtk.AttachOptions)(4));
			// Container child PropertiesLayout.Gtk.Table+TableChild
			this.lblP = new global::Gtk.Label ();
			this.lblP.Name = "lblP";
			this.lblP.LabelProp = global::Mono.Unix.Catalog.GetString ("P:");
			this.lblP.Justify = ((global::Gtk.Justification)(1));
			this.PropertiesLayout.Add (this.lblP);
			global::Gtk.Table.TableChild w17 = ((global::Gtk.Table.TableChild)(this.PropertiesLayout [this.lblP]));
			w17.TopAttach = ((uint)(1));
			w17.BottomAttach = ((uint)(2));
			w17.XOptions = ((global::Gtk.AttachOptions)(4));
			w17.YOptions = ((global::Gtk.AttachOptions)(4));
			// Container child PropertiesLayout.Gtk.Table+TableChild
			this.slideBeta = new global::Gtk.HScale (null);
			this.slideBeta.CanFocus = true;
			this.slideBeta.Name = "slideBeta";
			this.slideBeta.UpdatePolicy = ((global::Gtk.UpdateType)(2));
			this.slideBeta.Adjustment.Upper = 6.28;
			this.slideBeta.Adjustment.PageIncrement = 0.1;
			this.slideBeta.Adjustment.StepIncrement = 0.01;
			this.slideBeta.DrawValue = true;
			this.slideBeta.Digits = 2;
			this.slideBeta.ValuePos = ((global::Gtk.PositionType)(0));
			this.PropertiesLayout.Add (this.slideBeta);
			global::Gtk.Table.TableChild w18 = ((global::Gtk.Table.TableChild)(this.PropertiesLayout [this.slideBeta]));
			w18.TopAttach = ((uint)(5));
			w18.BottomAttach = ((uint)(6));
			w18.LeftAttach = ((uint)(1));
			w18.RightAttach = ((uint)(2));
			w18.YOptions = ((global::Gtk.AttachOptions)(4));
			// Container child PropertiesLayout.Gtk.Table+TableChild
			this.slideK = new global::Gtk.HScale (null);
			this.slideK.CanFocus = true;
			this.slideK.Name = "slideK";
			this.slideK.UpdatePolicy = ((global::Gtk.UpdateType)(2));
			this.slideK.Adjustment.Upper = 99;
			this.slideK.Adjustment.PageIncrement = 1;
			this.slideK.Adjustment.StepIncrement = 0.1;
			this.slideK.DrawValue = true;
			this.slideK.Digits = 0;
			this.slideK.ValuePos = ((global::Gtk.PositionType)(0));
			this.PropertiesLayout.Add (this.slideK);
			global::Gtk.Table.TableChild w19 = ((global::Gtk.Table.TableChild)(this.PropertiesLayout [this.slideK]));
			w19.TopAttach = ((uint)(4));
			w19.BottomAttach = ((uint)(5));
			w19.LeftAttach = ((uint)(1));
			w19.RightAttach = ((uint)(2));
			w19.YOptions = ((global::Gtk.AttachOptions)(4));
			// Container child PropertiesLayout.Gtk.Table+TableChild
			this.slideLambda = new global::Gtk.HScale (null);
			this.slideLambda.CanFocus = true;
			this.slideLambda.Name = "slideLambda";
			this.slideLambda.UpdatePolicy = ((global::Gtk.UpdateType)(2));
			this.slideLambda.Adjustment.Upper = 99;
			this.slideLambda.Adjustment.PageIncrement = 1;
			this.slideLambda.Adjustment.StepIncrement = 0.1;
			this.slideLambda.DrawValue = true;
			this.slideLambda.Digits = 0;
			this.slideLambda.ValuePos = ((global::Gtk.PositionType)(0));
			this.PropertiesLayout.Add (this.slideLambda);
			global::Gtk.Table.TableChild w20 = ((global::Gtk.Table.TableChild)(this.PropertiesLayout [this.slideLambda]));
			w20.TopAttach = ((uint)(2));
			w20.BottomAttach = ((uint)(3));
			w20.LeftAttach = ((uint)(1));
			w20.RightAttach = ((uint)(2));
			w20.YOptions = ((global::Gtk.AttachOptions)(4));
			// Container child PropertiesLayout.Gtk.Table+TableChild
			this.slideOmega = new global::Gtk.HScale (null);
			this.slideOmega.CanFocus = true;
			this.slideOmega.Name = "slideOmega";
			this.slideOmega.UpdatePolicy = ((global::Gtk.UpdateType)(2));
			this.slideOmega.Adjustment.Upper = 10;
			this.slideOmega.Adjustment.PageIncrement = 1;
			this.slideOmega.Adjustment.StepIncrement = 0.1;
			this.slideOmega.DrawValue = true;
			this.slideOmega.Digits = 0;
			this.slideOmega.ValuePos = ((global::Gtk.PositionType)(0));
			this.PropertiesLayout.Add (this.slideOmega);
			global::Gtk.Table.TableChild w21 = ((global::Gtk.Table.TableChild)(this.PropertiesLayout [this.slideOmega]));
			w21.TopAttach = ((uint)(3));
			w21.BottomAttach = ((uint)(4));
			w21.LeftAttach = ((uint)(1));
			w21.RightAttach = ((uint)(2));
			w21.YOptions = ((global::Gtk.AttachOptions)(4));
			// Container child PropertiesLayout.Gtk.Table+TableChild
			this.slideTime = new global::Gtk.HScale (null);
			this.slideTime.CanFocus = true;
			this.slideTime.Name = "slideTime";
			this.slideTime.Adjustment.Upper = 100;
			this.slideTime.Adjustment.PageIncrement = 10;
			this.slideTime.Adjustment.StepIncrement = 1;
			this.slideTime.DrawValue = true;
			this.slideTime.Digits = 2;
			this.slideTime.ValuePos = ((global::Gtk.PositionType)(1));
			this.PropertiesLayout.Add (this.slideTime);
			global::Gtk.Table.TableChild w22 = ((global::Gtk.Table.TableChild)(this.PropertiesLayout [this.slideTime]));
			w22.TopAttach = ((uint)(6));
			w22.BottomAttach = ((uint)(7));
			w22.LeftAttach = ((uint)(1));
			w22.RightAttach = ((uint)(2));
			w22.YOptions = ((global::Gtk.AttachOptions)(4));
			this.rightLayout.Add (this.PropertiesLayout);
			global::Gtk.Box.BoxChild w23 = ((global::Gtk.Box.BoxChild)(this.rightLayout [this.PropertiesLayout]));
			w23.PackType = ((global::Gtk.PackType)(1));
			w23.Position = 3;
			w23.Expand = false;
			w23.Fill = false;
			this.contentColumns.Add (this.rightLayout);
			global::Gtk.Box.BoxChild w24 = ((global::Gtk.Box.BoxChild)(this.contentColumns [this.rightLayout]));
			w24.Position = 1;
			w24.Expand = false;
			w24.Fill = false;
			this.layoutBox.Add (this.contentColumns);
			global::Gtk.Box.BoxChild w25 = ((global::Gtk.Box.BoxChild)(this.layoutBox [this.contentColumns]));
			w25.Position = 1;
			// Container child layoutBox.Gtk.Box+BoxChild
			this.statusMain = new global::Gtk.Statusbar ();
			this.statusMain.Name = "statusMain";
			this.statusMain.Spacing = 6;
			// Container child statusMain.Gtk.Box+BoxChild
			this.lblStatus = new global::Gtk.Label ();
			this.lblStatus.Name = "lblStatus";
			this.lblStatus.Selectable = true;
			this.statusMain.Add (this.lblStatus);
			global::Gtk.Box.BoxChild w26 = ((global::Gtk.Box.BoxChild)(this.statusMain [this.lblStatus]));
			w26.Position = 1;
			w26.Expand = false;
			w26.Fill = false;
			// Container child statusMain.Gtk.Box+BoxChild
			this.progressStatus = new global::Gtk.ProgressBar ();
			this.progressStatus.Name = "progressStatus";
			this.statusMain.Add (this.progressStatus);
			global::Gtk.Box.BoxChild w27 = ((global::Gtk.Box.BoxChild)(this.statusMain [this.progressStatus]));
			w27.Position = 2;
			this.layoutBox.Add (this.statusMain);
			global::Gtk.Box.BoxChild w28 = ((global::Gtk.Box.BoxChild)(this.layoutBox [this.statusMain]));
			w28.Position = 2;
			w28.Expand = false;
			w28.Fill = false;
			this.Add (this.layoutBox);
			if ((this.Child != null)) {
				this.Child.ShowAll ();
			}
			this.DefaultWidth = 558;
			this.DefaultHeight = 309;
			this.Show ();
			this.DeleteEvent += new global::Gtk.DeleteEventHandler (this.OnDeleteEvent);
			this.SizeAllocated += new global::Gtk.SizeAllocatedHandler (this.OnSizeAllocated);
			this.mnFileNew.Activated += new global::System.EventHandler (this.OnMnFileNewActivated);
			this.mnFileOpen.Activated += new global::System.EventHandler (this.OnMnFileOpenActivated);
			this.mnFileSave.Activated += new global::System.EventHandler (this.OnMnFileSaveActivated);
			this.mnFilePlot.Activated += new global::System.EventHandler (this.OnMnFilePlotActivated);
			this.mnFileQuit.Activated += new global::System.EventHandler (this.OnMnFileCloseActivated);
			this.mnModePresentation.Changed += new global::Gtk.ChangedHandler (this.OnPresentationActionChanged);
			this.mnModeModification.Changed += new global::Gtk.ChangedHandler (this.OnMnModeModificationChanged);
			this.mnModeInvestigation.Changed += new global::Gtk.ChangedHandler (this.OnInvestigationActionChanged);
			this.mnAwpRandom.Activated += new global::System.EventHandler (this.OnMnAwpRandomActivated);
			this.mnAwpTwoSteps.Activated += new global::System.EventHandler (this.OnMnAwp2StepsActivated);
			this.mnAwpCurrent.Activated += new global::System.EventHandler (this.OnMnAwpCurrentActivated);
			this.mnExtrasPlayPause.Activated += new global::System.EventHandler (this.OnMnExtrasPlayActivated);
			this.mnExtrasClear.Activated += new global::System.EventHandler (this.OnMnExtrasClearPhaseActivated);
			this.mnHelpAbout.Activated += new global::System.EventHandler (this.OnMnHelpAboutActivated);
			this.mnExtrasOption.Activated += new global::System.EventHandler (this.OnMnExtrasOptionActivated);
			this.ZeitpunktAction.Changed += new global::Gtk.ChangedHandler (this.OnZeitpunktActionChanged);
			this.HistorieAction.Changed += new global::Gtk.ChangedHandler (this.OnHistorieActionChanged);
			this.slideTime.ValueChanged += new global::System.EventHandler (this.OnSlideTimeValueChanged);
			this.slideOmega.ValueChanged += new global::System.EventHandler (this.OnSlideOmegaValueChanged);
			this.slideLambda.ValueChanged += new global::System.EventHandler (this.OnSlideLambdaValueChanged);
			this.slideK.ValueChanged += new global::System.EventHandler (this.OnSlideKValueChanged);
			this.slideBeta.ValueChanged += new global::System.EventHandler (this.OnSlideBetaValueChanged);
			this.numP.ValueChanged += new global::System.EventHandler (this.OnNumPValueChanged);
			this.numN.ValueChanged += new global::System.EventHandler (this.OnNumNValueChanged);
			this.btnPlayPause.Clicked += new global::System.EventHandler (this.OnBtnPlayPauseClicked);
			this.drawPlayPause.ExposeEvent += new global::Gtk.ExposeEventHandler (this.OnDrawPlayPauseExposeEvent);
		}
	}
}
